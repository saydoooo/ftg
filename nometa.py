# ‚ñà ‚ñà ‚ñÄ ‚ñà‚ñÑ‚ñÄ ‚ñÑ‚ñÄ‚ñà ‚ñà‚ñÄ‚ñà ‚ñÄ    ‚ñÑ‚ñÄ‚ñà ‚ñÄ‚ñà‚ñÄ ‚ñÑ‚ñÄ‚ñà ‚ñà‚ñÄ‚ñÑ‚ñÄ‚ñà ‚ñÑ‚ñÄ‚ñà
# ‚ñà‚ñÄ‚ñà ‚ñà ‚ñà ‚ñà ‚ñà‚ñÄ‚ñà ‚ñà‚ñÄ‚ñÑ ‚ñà ‚ñÑ  ‚ñà‚ñÄ‚ñà  ‚ñà  ‚ñà‚ñÄ‚ñà ‚ñà ‚ñÄ ‚ñà ‚ñà‚ñÄ‚ñà
#
#              ¬© Copyright 2022
#
#          https://t.me/hikariatama
#
# üîí Licensed under the GNU GPLv3
# üåê https://www.gnu.org/licenses/agpl-3.0.html

# meta pic: https://img.icons8.com/fluency/50/000000/v-live.png
# meta developer: @hikariatama

from .. import loader
from telethon.tl.types import Message


@loader.tds
class NoMetaMod(loader.Module):
    """Warns people about Meta messages"""

    strings = {
        "name": "NoMeta",
        "no_meta": "<b>üëæ <u>Please!</u></b>\n<b>NoMeta</b> aka <i>'Hello', 'Hi' etc.</i>\nAsk <b>directly</b>, what do you want from me.",
        "no_meta_ru": "<b>üëæ <u>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞!</u></b>\n<b>–ù–µ –Ω—É–∂–Ω–æ –ª–∏—à–Ω–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π</b> –ø–æ —Ç–∏–ø—É <i>'–ü—Ä–∏–≤–µ—Ç', '–•–∞–π' –∏ –¥—Ä.</i>\n–°–ø—Ä–∞—à–∏–≤–∞–π(-—Ç–µ) <b>–∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ</b>, —á—Ç–æ –æ—Ç –º–µ–Ω—è –Ω—É–∂–Ω–æ.",
    }

    async def client_ready(self, client, db):
        self._client = client

    @loader.unrestricted
    async def nometacmd(self, message: Message):
        """–ï—Å–ª–∏ –∫—Ç–æ-—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏–ª –º–µ—Ç—É –ø–æ —Ç–∏–ø—É '–ü—Ä–∏–≤–µ—Ç', —ç—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –µ–≥–æ –≤—Ä–∞–∑—É–º–∏—Ç"""
        await self._client.send_message(
            message.peer_id,
            self.strings("no_meta"),
            reply_to=getattr(message, "reply_to_msg_id", None),
        )
        await message.delete()

    async def watcher(self, message: Message):
        if not getattr(message, "raw_text", False):
            return

        if not message.is_private:
            return

        meta = ["hi", "hello", "hey there", "konichiwa", "hey"]

        meta_ru = [
            "–ø—Ä–∏–≤–µ—Ç",
            "—Ö–∞–π",
            "—Ö–µ–ª–ª–æ",
            "—Ö–µ–ª–ª–æ—É",
            "—Ö—ç–ª–ª–æ—É",
            "–∫–æ–Ω–∏—á–∏–≤–∞",
            "–∞–ª–æ—Ö–∞",
            "—Å–ª—É—à–∞–π",
            "–æ",
            "—Å–ª—É—à",
            "–º?",
            "–∞?",
            "—Ö–µ–π",
            "—Ö—ç–π",
            "–π–æ",
            "–π–æ—É",
            "–ø—Ä–∏–≤",
            "–¥–∞–Ω",
            "yo",
            "–∫—É",
        ]

        if message.raw_text.lower() in meta:
            await self._client.send_message(
                message.peer_id, self.strings("no_meta"), reply_to=message.id
            )
            await self._client.send_read_acknowledge(
                message.chat_id, clear_mentions=True
            )

        if message.raw_text.lower() in meta_ru:
            await self._client.send_message(
                message.peer_id, self.strings("no_meta_ru"), reply_to=message.id
            )
            await self._client.send_read_acknowledge(
                message.chat_id, clear_mentions=True
            )
